service: animeconnectcc-aws-serverless-app
app: animeconnectcc-aws-serverless-app
org: ktolentino

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-west-2
  environment:
    CANDIDATE_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"

functions:
  getAnime:
    handler: getAnimeRec.getAnime
    memorySize: 128
    description: Fetch anime reccomendation based on selected vanity word.

  getNumber:
    handler: getNumber.getNumber
    memorySize: 128
    description: Get inbound caller number and 5 vanity possibilities to DynamoDB table.

  postNumber:
    handler: postNumber.submit
    memorySize: 128
    description: Post inbound caller number and 5 vanity possibilities to DynamoDB table.
    events:
      - http:
          path: postVanity
          method: post

resources:
  Resources:
    CallerDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "number"
            AttributeType: "S"
        KeySchema:
          -
            AttributeName: "number"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.CANDIDATE_TABLE}
